name: 'Terraform'
 
on:
  - push

jobs:
  terraform:
    name: 'Terraform'
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
      tf_actions_working_dir: './terraform'
      tfa_version: 0.14.8
      TF_WORKSPACE: uat

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.tf_actions_working_dir }}
        shell: bash
 
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    - name: 'Terraform Format'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: ${{ env.tfa_version }}
        tf_actions_subcommand: 'fmt'
        tf_actions_working_dir: "./terraform"
         
    - name: 'Terraform Init'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: ${{ env.tfa_version }}
        tf_actions_subcommand: 'init'
        tf_actions_working_dir: "./terraform"
        args: '-backend-config="../variables/uat/backend.tfvars" -var-file="./terraform.tfvars"'
      env:
        TF_WORKSPACE: ${{ env.WORKSPACE }}

    - name: 'Terraform Validate'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: ${{ env.tfa_version }}
        tf_actions_subcommand: 'validate'
        tf_actions_working_dir: "./terraform"

    - name: 'Terraform Plan'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: ${{ env.tfa_version }}
        tf_actions_subcommand: 'plan'
        tf_actions_working_dir: "./terraform"
        args: '-var-file="../variables/uat/backend.tfvars" -var-file="./terraform.tfvars"'
      env:
        TF_WORKSPACE: ${{ env.WORKSPACE }}

    - name: 'Terraform Apply'
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: ${{ env.tfa_version }}
        tf_actions_subcommand: 'apply'
        tf_actions_working_dir: "./terraform"
        args: '-var-file="../variables/uat/backend.tfvars" -var-file="./terraform.tfvars"'
      env:
        TF_WORKSPACE: ${{ env.TF_WORKSPACE }}
     
    - name: 'Terraform Output'
      id: terraform
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: ${{ env.tfa_version }}
        tf_actions_subcommand: 'output'
        tf_actions_working_dir: "./terraform"
